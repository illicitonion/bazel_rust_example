module(name = "bazel_rust_example")

###############################################################################
# B A Z E L  C E N T R A L  R E G I S T R Y
# https://registry.bazel.build/
###############################################################################
# https://github.com/bazelbuild/bazel-skylib/releases/
bazel_dep(name = "bazel_skylib", version = "1.7.1")
# https://github.com/bazelbuild/rules_rust/releases
bazel_dep(name = "rules_rust", version = "0.46.0")
# https://github.com/aspect-build/bazel-lib/releases
bazel_dep(name = "aspect_bazel_lib", version = "2.7.7")
# https://github.com/keith/rules_multirun/releases
bazel_dep(name = "rules_multirun", version = "0.9.0")
# https://github.com/bazel-contrib/rules_oci/releases
bazel_dep(name = "rules_oci", version = "1.7.6")
# https://github.com/bazelbuild/rules_pkg/releases
bazel_dep(name = "rules_pkg", version = "0.10.1")
#

#
# https://github.com/bazelbuild/rules_proto/releases
bazel_dep(
    name = "rules_proto",
    version = "5.3.0-21.7",
)

# https://github.com/protocolbuffers/protobuf/releases
bazel_dep(
    name = "protobuf",
    version = "21.7",
    repo_name = "com_google_protobuf",
)

###############################################################################
# T O O L C H A I N S
###############################################################################
# Rust toolchain
rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(edition = "2021")
use_repo(rust, "rust_toolchains")

register_toolchains(
    "@rust_toolchains//:all"
)

register_toolchains(
    "@rules_rust//proto/protobuf:default-proto-toolchain",
)
register_toolchains(
    "@rules_rust//proto/prost:default_prost_toolchain",
)

###############################################################################
#  O C I  I M A G E
###############################################################################
oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "distroless",
    digest = "sha256:e1065a1d58800a7294f74e67c32ec4146d09d6cbe471c1fa7ed456b2d2bf06e0",
    image = "gcr.io/distroless/cc-debian12",
    platforms = ["linux/amd64", "linux/arm64/v8"],
)

use_repo(oci, "distroless")

###############################################################################
# R U S T  C R A T E S
###############################################################################
crate = use_extension("@rules_rust//crate_universe:extension.bzl", "crate")
crate.spec(package = "jemallocator", version = "0.5.4")
crate.spec(package = "mimalloc", version = "0.1.42")
crate.spec(package = "prost", version = "0.12")
crate.spec(package = "tonic",features = ["transport"], version = "0.11")
crate.spec(package = "tonic-build", version = "0.11")
crate.spec(package = "tonic-health", features = ["transport"], version = "0.11")
crate.spec(package = "tokio", features = ["macros", "net", "rt-multi-thread", "signal"], version = "1.38")

crate.from_specs()
use_repo(crate, "crates")