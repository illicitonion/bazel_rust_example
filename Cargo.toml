[workspace]
resolver = "2"

members = [
    "crates/proto_bindings",
    "crates/grpc_server"
]


[workspace.package]
edition = "2021"
rust-version = "1.78.0"
readme = "README.md"
repository = "https://github.com/marvin-hansen/bazel_rust_example"
authors = ["Marvin Hansen <marvin.hansen@gmail.com>"]


[workspace.dependencies]
#
# ==============
# Internal crates
# ==============
#
proto_bindings = { path = "crates/proto_bindings" }
#
# ==============
# Custom Memory Allocator
# ==============
jemallocator = { version = "0.5.4" }
mimalloc = { version = "0.1.42" }
#
# ==============
# External crates
# ==============
#
prost = { version = "0.12" }
tonic = { version = "0.11", features = ["transport"] }
tonic-build = "0.11"
tonic-health = { version = "0.11", default-features = false, features = ["transport"] }
tokio = { version = "1.38", default-features = false, features = ["macros", "net", "rt-multi-thread", "signal"] }


# Optimize all crates
[profile.release]
opt-level = 3
strip = true  # Automatically strip debug symbols from the binary
lto = true    # Enable Link Time Optimization (LTO)
codegen-units = 1 # Reduce Parallel Code Generation Units to Increase Optimization


# There's a Cargo feature named profile-overrides
# that lets you override the optimization level of dependencies.
# https://docs.rust-embedded.org/book/unsorted/speed-vs-size.html
[profile.release.package."*"]
opt-level = 3
strip = 'debuginfo'  # Automatically strip debug infos from the binary to reduce size
codegen-units = 1 # Reduce Parallel Code Generation Units to Increase Optimization
