load("@rules_rust//rust:defs.bzl", "rust_binary", "rust_doc", "rust_doc_test", "rust_test_suite")
# OCI Container Rules
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_push",  "oci_image_index")
# Custom container macro
load("//:build_image.bzl", "build_image", "build_tag")

# Build binary
# https://bazelbuild.github.io/rules_rust/defs.html#rust_binary
rust_binary(
    name = "server",
    crate_root = "src/bin/server/main.rs",
    srcs = glob([
        "src/bin/server/*.rs",
    ]),
    rustc_flags = select({
       "//:release": [
            "-Clto",
            "-Ccodegen-units=1",
            "-Cpanic=abort",
            "-Copt-level=3",
            "-Cstrip=symbols",
            ],
        "//conditions:default":
        [
           "-Copt-level=0",
        ],
    }),
    deps = [
        # Internal crates
        "//crates/proto_bindings:rust_proto",
        # External crates
        "@crates//:prost",
        "@crates//:tokio",
        "@crates//:tonic",
    ],
    visibility = ["//visibility:public"],
)


# Build documentation
# https://bazelbuild.github.io/rules_rust/rust_doc.html
rust_doc(
    name = "server_doc",
    crate = ":server",
    visibility = ["//visibility:public"],
)

# Test documentation
# https://bazelbuild.github.io/rules_rust/rust_doc.html#rust_doc_test
rust_doc_test(
     name = "server_doc_test",
     crate = ":server",
     visibility = ["//visibility:public"],
 )


# Build binary
# https://bazelbuild.github.io/rules_rust/defs.html#rust_binary
rust_binary(
    name = "client",
    crate_root = "src/bin/client/main.rs",
    srcs = glob([
        "src/bin/client/*.rs",
    ]),
    rustc_flags = select({
       "//:release": [
            "-Clto",
            "-Ccodegen-units=1",
            "-Cpanic=abort",
            "-Copt-level=3",
            "-Cstrip=symbols",
            ],
        "//conditions:default":
        [
           "-Copt-level=0",
        ],
    }),
    deps = [
        # Internal crates
        "//crates/proto_bindings:rust_proto",
        # External crates
        "@crates//:prost",
        "@crates//:tokio",
        "@crates//:tonic",
    ],
    visibility = ["//visibility:public"],
)

# Build documentation
# https://bazelbuild.github.io/rules_rust/rust_doc.html
rust_doc(
    name = "client_doc",
    crate = ":client",
    visibility = ["//visibility:public"],
)

# Test documentation
# https://bazelbuild.github.io/rules_rust/rust_doc.html#rust_doc_test
rust_doc_test(
     name = "client_doc_test",
     crate = ":client",
     visibility = ["//visibility:public"],
 )

rust_test_suite(
    name = "demo_tests",
    srcs = glob([
        "tests/*_tests.rs",
    ]),
    deps = [
      # Crate to test
      "//crates/proto_bindings:rust_proto",
      # External crates

    ],
    tags = ["unit","common"],
    visibility = ["//visibility:public"],
)

# Build container image for server
# This is a custom macro defined in build_image.bzl in the project root folder
build_image(
    name = "image",
    srcs = [":server"],
    exposed_ports = ["5050"],
    visibility = ["//visibility:public"],
)

# Build an unique and immutable image tag based on the image SHA265 digest.
# This is a custom macro defined in build_image.bzl in the project root folder
build_tag(
    name = "remote_tag",
    image = ":image",
    input = "image.json.sha256",
    output = "_tag.txt",
)

# Publish image to registry
# https://github.com/bazel-contrib/rules_oci/blob/main/docs/push.md
oci_push(
    name = "push",
    image = ":image",
    repository = "my.registry.host.com",
    remote_tags = ":remote_tag",
    visibility = ["//visibility:public"],
)
